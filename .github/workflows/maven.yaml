name: Maven CI/CD

on: [push]
permissions:
  id-token: write
  contents: read 
jobs:
  create-repo:
    uses: Pacificdubey/resuable-workflow/.github/workflows/repo-creation.yml@main
    with:
      repo_type: maven
  upload-artifact:
    runs-on: ubuntu-latest
    needs: create-repo
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
         java-version: '11'
         distribution: 'adopt'
    - name: JFrog Setup
      id: setup-cli
      uses: jfrog/setup-jfrog-cli@v4.2.2
      env:
          JF_URL: ${{ vars.JF_URL }} # This should be the base URL of your Artifactory
      with:
          oidc-provider-name: githubtest
          oidc-audience: aud
    - name: Build with Maven
      run: mvn clean package
    - name: Generate Timestamped Filename and Rename JAR
      id: rename-jar
      run: |
        TIMESTAMP=$(date +"%Y%m%d%H%M%S")
        ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        ORIGINAL_JAR="target/${ARTIFACT_ID}-${VERSION}.jar"
        TIMESTAMPED_JAR="target/${ARTIFACT_ID}-${VERSION}-${TIMESTAMP}.jar"
        echo $ORIGINAL_JAR
        # Rename the JAR file with the timestamp
        #mv "$ORIGINAL_JAR" "$TIMESTAMPED_JAR"
        # Save the new filename in the environment for later steps
        #echo "TIMESTAMPED_JAR=$TIMESTAMPED_JAR" >> $GITHUB_ENV
    - name: Upload to artifact
      run: |
        REPO_NAME="${{ needs.create-repo.outputs.repo_name }}"
        echo $REPO_NAME 
        ls -la target/


        
