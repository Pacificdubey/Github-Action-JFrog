name: Build and Test Python
on: [push]
 # release:
  #  types: [published]
env:
  BUILD_NAME: Staging
  BUILD_NUMBER: ${{github.run_number}}
permissions:
    id-token: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
     - name: Repsoitory checkout
       uses: actions/checkout@v4
     - name: Python Setup
       uses: actions/setup-python@v4
       with:
         python-version: '3.9'
     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         python -m pip install build
         pip install -r requirements.txt
     - name: Build release distributions
       run: python -m build
     - name: upload build artifacts
       uses: actions/upload-artifact@v4
       with:
        name: dist
        path: dist/

  deploy-test:
    needs: build
    runs-on: ubuntu-latest
   # environment: Prod
    steps:
     - name: Download Build Artifcats
       uses: actions/download-artifact@v4
       with:
        name: dist
     - name: JFrog Setup
       id: setup-cli
       uses: jfrog/setup-jfrog-cli@v4.2.2
       env:
         JF_URL: ${{ vars.JF_URL }} # This should be the base URL of your Artifactory
       with:
         oidc-provider-name: githubtest
         oidc-audience: aud
         
     - name: Test Connection
       run: |
         # Ping the server
         jf rt ping
     - name: Upload artifact to staging
       run: |
        jfrog rt upload *.whl python-test-pypi-local/ --build-name=$BUILD_NAME --build-number=$BUILD_NUMBER --detailed-summary
        # jfrog rt build-collect-env
        jfrog rt build-publish 
        jfrog rt build-scan
     

     








         
